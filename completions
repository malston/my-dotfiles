
# Add cargo to path
if [ -d $HOME/.cargo/bin ]; then
  export PATH="$HOME/.cargo/bin:$PATH"
fi

test -e "${HOME}/.iterm2_shell_integration.bash" && source "${HOME}/.iterm2_shell_integration.bash"

# [[ -r "/usr/local/etc/profile.d/bash_completion.sh" ]] && . "/usr/local/etc/profile.d/bash_completion.sh"
[[ -r "/opt/homebrew/etc/profile.d/bash_completion.sh" ]] && . "/opt/homebrew/etc/profile.d/bash_completion.sh"

# The next line updates PATH for the Google Cloud SDK.
if [ -f '$HOME/tools/google-cloud-sdk/path.bash.inc' ]; then . '$HOME/tools/google-cloud-sdk/path.bash.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '$HOME/tools/google-cloud-sdk/completion.bash.inc' ]; then . '$HOME/tools/google-cloud-sdk/completion.bash.inc'; fi

export PATH="${KREW_ROOT:-$HOME/.krew}/bin:$PATH"

# Kubernetes prompt
if [ -f /usr/local/opt/kube-ps1/share/kube-ps1.sh ]; then source "/usr/local/opt/kube-ps1/share/kube-ps1.sh"; fi
if [ -f /opt/homebrew/opt/kube-ps1/share/kube-ps1.sh ]; then source "/opt/homebrew/opt/kube-ps1/share/kube-ps1.sh"; fi

# Setup autocomplete for kubectl commands
if command -v kubectl &> /dev/null; then
  source <(kubectl completion bash)
  alias k=kubectl
  complete -F __start_kubectl k
fi

if [ -f $HOME/.sdkman/bin/sdkman-init.sh ]; then source "$HOME/.sdkman/bin/sdkman-init.sh"; fi

if [ -d $HOME/.jenv/bin ]; then
  export PATH="$HOME/.jenv/bin:$PATH"
  eval "$(jenv init -)"
fi

if command -v rbenv &> /dev/null; then
  eval "$(rbenv init -)"
fi

export BASH_SILENCE_DEPRECATION_WARNING=1

print_current_foundation(){
  lt_blue='\e[1;34m'
  clear='\e[0m'
  if [ -n "$FOUNDATION" ]; then
    echo -ne "$lt_blue""${FOUNDATION} ""$clear"
  fi
}

# enable direnv
if [ which -a direnv ]; then
  export PS1='$(print_current_foundation)'$PS1
  eval "$(direnv hook bash)"
fi

# Go
if [ -d /usr/local/go ]; then
  export PATH=~/bin:~/.bin:~/go/bin:/usr/local/go/bin:$PATH
  export GOPATH=$HOME/workspace/go
  export PATH=$GOPATH/bin:$PATH
  # enable ginkgo focus in editors
  export GINKGO_EDITOR_INTEGRATION=true
fi

# GNU Sed
if [ -d /usr/local/opt/gnu-sed/libexec/gnubin ]; then
  PATH="/usr/local/opt/gnu-sed/libexec/gnubin:$PATH"
fi

# Python
# See https://github.com/pyenv/pyenv
# See https://github.com/pyenv/pyenv-virtualenv
if command -v pyenv 1>/dev/null 2>&1; then
  eval "$(pyenv init -)"
  # We want to regularly go to our virtual environment directory
  export WORKON_HOME=~/.virtualenvs

  # If in a given virtual environment, make a virtual environment directory
  # If one does not already exist
  mkdir -p $WORKON_HOME

  # Activate the new virtual environment by calling this script
  # The workon and mkvirtualenv functions are in here
  # test -e "${HOME}/.pyenv/versions/$(pyenv version-name)/bin/virtualenvwrapper.sh" && source "${HOME}/.pyenv/versions/$(pyenv version-name)/bin/virtualenvwrapper.sh"
  eval "$(pyenv virtualenv-init -)"
fi

# export NVM_DIR="$HOME/.nvm"
# [ -s "/usr/local/opt/nvm/nvm.sh" ] && . "/usr/local/opt/nvm/nvm.sh"  # This loads nvm
# [ -s "/usr/local/opt/nvm/etc/bash_completion.d/nvm" ] && . "/usr/local/opt/nvm/etc/bash_completion.d/nvm"  # This loads nvm bash_completion

if command -v flux &> /dev/null; then
  source <(flux completion bash)
fi
if command -v tanzu &> /dev/null; then
  source <(tanzu completion bash)
fi
if command -v glab &> /dev/null; then
  source <(glab completion bash)
fi
if command -v kp &> /dev/null; then
  source <(kp completion bash)
fi

if command -v starship &> /dev/null; then
  eval "$(starship init bash)"
fi
