format = """
${custom.foundation}\
$all"""

add_newline = false

[line_break]
disabled = false

[aws]
symbol = '☁️  '
disabled = false
format = ' on [$symbol($profile )(\($region\) )(\[$duration\] )]($style)'

[buf]
symbol = '🦬 '

[c]
format = 'via [$name $version]($style)'

[cmd_duration]
min_time = 10000
format = "[$duration]($style) "
style = "yellow"

[custom.foundation]
description = "Foundation variable"
command = "echo -n ${FOUNDATION}"
when = """ test -n "${FOUNDATION}" """
shell = ["bash", "--noprofile", "--norc"]
symbol = "🪐 "
style = "bold green"
format = "[$symbol$output]($style) "

[conda]
symbol = '🅒 '

[dart]
symbol = '🎯 '

[directory]
read_only = " 󰌾"

[docker_context]
symbol = '🐳 '

[elixir]
symbol = '💧 '

[elm]
symbol = '🌳 '

[env_var]
disabled = true
symbol = ' '
variable = 'FOUNDATION'
style = "bold green"
format = '[$symbol$env_value]($style)'

[gcloud]
symbol = '☁️ '
disabled = true
format = ' on [$symbol$account (\($project\)) in (\($region\))]($style)'

[gcloud.region_aliases]
europe-west2 = "eu-w2"

[git_branch]
symbol = '🌱 '
truncation_length = 4
truncation_symbol = ''
format = '[$symbol$branch(:$remote_branch)]($style) '
# format = '\[[$symbol$branch]($style)\]'

[git_commit]
commit_hash_length = 4
tag_symbol = '🔖 '

[git_state]
format = '[\($state( $progress_current of $progress_total)\)]($style) '
cherry_pick = '[🍒 PICKING](bold red)'

[git_status]
format = '([\[$all_status$ahead_behind\]]($style))'
conflicted = '🏳'
ahead = '🏎💨'
behind = '😰'
diverged = '😵'
up_to_date = '✓'
untracked = '🤷'
stashed = '📦'
modified = '📝'
staged = '[++\($count\)](green)'
renamed = '👅'
deleted = '🗑'

[golang]
format = 'via [🏎💨 $version](bold cyan) '

[guix_shell]
disabled = true
format = 'via [🐂](yellow bold) '

[haxe]
format = "via [⌘ $version](bold fg:202) "

[hg_branch]
format = 'on [🌱 $branch](bold purple)'
truncation_length = 4
truncation_symbol = ''

[hostname]
ssh_symbol = '🌐 '
ssh_only = false
format = '[$ssh_symbol](bold blue) on [$hostname](bold red) '
trim_at = '.companyname.com'
disabled = false

[java]
symbol = '🌟 '

[julia]
symbol = '∴ '

# https://starship.rs/config/#kubernetes
[kubernetes]
# format = 'on [⛵ ($user on )($cluster in )$context \($namespace\)](dimmed green) '
format = '[$symbol$context( \($namespace\))]($style) '
disabled = false
# detect_files = ['k8s']

[kubernetes.context_aliases]
'dev.local.cluster.k8s' = 'dev'
'.*/openshift-cluster/.*' = 'openshift'
'gke_.*_(?P<var_cluster>[\w-]+)' = 'gke-$var_cluster'

[kubernetes.user_aliases]
'dev.local.cluster.k8s' = 'dev'
'root/.*' = 'root'

[lua]
format = 'via [🌕 $version](bold blue) '

[memory_usage]
disabled = false
threshold = -1
symbol = ' '
style = 'bold dimmed green'

[meson]
symbol = "󰔷 "
disabled = false
truncation_symbol = '--'
symbol = ' '
style = 'bold dimmed green'

[nim]
style = 'yellow'
symbol = '🎣 '

[nix_shell]
disabled = true
impure_msg = '[impure shell](bold red)'
pure_msg = '[pure shell](bold green)'
unknown_msg = '[unknown shell](bold yellow)'
format = 'via [☃️ $state( \($name\))](bold blue) '

[nodejs]
format = 'via [🤖 $version](bold green) '

[os.symbols]
Alpaquita = "🔔 "
Alpine = "🏔️ "
Amazon = "🙂 "
Android = "🤖 "
Arch = "🎗️ "
Artix = "🎗️ "
CentOS = "💠 "
Debian = "🌀 "
DragonFly = "🐉 "
Emscripten = "🔗 "
EndeavourOS = "🚀 "
Fedora = "🎩 "
FreeBSD = "😈 "
Garuda = "🦅 "
Gentoo = "🗜️ "
HardenedBSD = "🛡️ "
Illumos = "🐦 "
Linux = "🐧 "
Mabox = "📦 "
Macos = "🍎 "
Manjaro = "🥭 "
Mariner = "🌊 "
MidnightBSD = "🌘 "
Mint = "🌿 "
NetBSD = "🚩 "
NixOS = "❄️ "
OpenBSD = "🐡 "
OpenCloudOS = "☁️ "
openEuler = "🦉 "
openSUSE = "🦎 "
OracleLinux = "🦴 "
Pop = "🍭 "
Raspbian = "🍓 "
Redhat = "🎩 "
RedHatEnterprise = "🎩 "
Redox = "🧪 "
Solus = "⛵ "
SUSE = "🦎 "
Ubuntu = "🎯 "
Unknown = "❓ "
Windows = "🪟 "

[package]
format = 'via [🎁 $version](208 bold) '

[pijul_channel]
symbol = "🪺 "

[python]
symbol = '👾 '
format = 'via [${symbol}${pyenv_prefix}(${version} )(\($virtualenv\) )]($style)'
pyenv_version_name = true
# Only use the `python3` binary to get the version.
python_binary = 'python3'
# Display the version of python from inside a local venv.
#
# Note this will only work when the venv is inside the project and it will only
# work in the directory that contains the venv dir but maybe this is ok?
python_binary = ['./venv/bin/python', 'python', 'python3', 'python2']

[rlang]
format = 'with [📐 $version](blue bold) '

[ruby]
symbol = '🔺 '

[rust]
format = 'via [⚙️ $version](red bold)'

[scala]
symbol = '🌟 '

[spack]
symbol = "🅢 "
format = '[$symbol$environment](dimmed blue) '

